
/* global PlugIn flattenedTags Alert Form moveTasks Task */
/* eslint spaced-comment: ["error", "always", { "exceptions": ["{"] }] */
/*{
"type": "action",
"targets": ["omnifocus"],
"author": "Kaitlin Salzke",
"identifier": "com.KaitlinSalzke.assignActionGroup",
"description": "Move tasks to an action group within their already-assigned project.",
"label": "Move to Action Group",
"shortLabel": "Move to Action Group",
"image": "arrow.right.to.line.alt",
"version": "1.0.0",
}*/
(() => {
  const action = new PlugIn.Action(async selection => {
    const tag = flattenedTags.byName('Action Group')

    const task = selection.tasks[0]
    let group = null

    // get currently assigned project - if none show warning
    const proj = task.containingProject || task.assignedContainer
    if (proj === null) {
      const warning = new Alert('No Project', 'The selected task has not been assigned to a project.')
      warning.show()
      return
    }

    // check if there are any relevant action groups - if none show warning and option to add
    const addGroup = async () => {
      console.log('in addGroup')
      const form = new Form()
      form.addField(new Form.Field.String('groupName', 'Group Name'))
      await form.show('Action Group Name', 'Create and Move')
      return new Task(form.values.groupName, proj.ending)
    }

    const groups = proj.flattenedTasks.filter(proj => proj.tags.includes(tag))
    if (groups.length === 0) {
      const warning = new Alert('No Action Groups', 'There are no action groups with the relevant tag in this project.')
      warning.addOption('Add group')
      warning.addOption('OK')
      await warning.show(async index => {
        console.log('callback')
        if (index === 0) group = await addGroup()
      })
    }

    console.log('before return')

    console.log('group: ' + group || 'null')
    console.log(groups.length)
    if (group === null && groups.length === 0) return

    console.log('after return')

    // if one or more, show form
    const form = new Form()
    const actionGroupSelect = new Form.Field.Option('actionGroup', 'Action Group', groups, groups.map(group => group.name), groups[0], 'No action group')
    actionGroupSelect.allowsNull = true
    form.addField(actionGroupSelect)
    await form.show('Select Action Group', 'Move')

    // move to selected action group, if any
    if (form.values.actionGroup !== null) group = form.values.actionGroup

    console.log(group)
    moveTasks([task], group)
  })

  action.validate = selection => {
    return selection.tasks.length === 1
  }

  return action
})()
